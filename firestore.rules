rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles and all subcollections
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Fix: Use underscore to match your code
      match /liked_questions/{questionId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Catch-all for any other subcollections
      match /{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // User sessions and all subcollections
    match /user_sessions/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      match /{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // User behaviors and all subcollections
    match /user_behaviors/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      match /{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // User preferences
    match /user_preferences/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Cards collection
    match /cards/{cardId} {
      allow read: if true;
      allow create, update: if request.auth != null;
      allow delete: if request.auth != null;
      
      match /likes/{likeId} {
        allow read: if true;
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
        allow update: if false;
      }
    }
    
    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}